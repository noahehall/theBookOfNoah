# -*- mode: ruby -*-
# vi: set ft=ruby :

# this file contains reference of all available configuration settings
# ^ with my opinionated defaults

# @see https://docs.vagrantup.com
# @see boxes at https://vagrantcloud.com/search

ENV["LC_ALL"] = "en_US.UTF-8"
Vagrant.require_version ">= 2.2"

# Vagrant.configure("2") do |config|
  # box settings --------------------------------------------------------------

  # base box
  # config.vm.box = "orgName/boxVersion"

  # if you need to specify a version
  # config.vm.box_version = "1.0.282"

  # if not sourcing from vagrant cloud
  # config.vm.box_url = "https://some/other/repo"

  # check for box updates on start
  # config.vm.box_check_update = true

  # host path is relative to the Vagrantfile
  # config.vm.synced_folder "../path/on/host", "/absolute/path/on/guest",

  # provisioning settings -----------------------------------------------------
  # run scripts when the box starts the first/every time
  # via shell, Ansible, Chef, Docker, Puppet and Salt
  # e.g. to install packages, to configure the box, to install apps, etc.

  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL

  # network settings ----------------------------------------------------------

  # public network
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # public network, private access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # private network
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # virtualbox settings -------------------------------------------------------

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.
# end
